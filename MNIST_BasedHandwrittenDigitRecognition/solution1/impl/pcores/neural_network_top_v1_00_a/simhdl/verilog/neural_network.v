// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="neural_network,hls_ip_2014_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc6slx9csg324-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=2036121,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module neural_network (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b0000;
parameter    ap_ST_st2_fsm_1 = 4'b1;
parameter    ap_ST_st3_fsm_2 = 4'b10;
parameter    ap_ST_st4_fsm_3 = 4'b11;
parameter    ap_ST_st5_fsm_4 = 4'b100;
parameter    ap_ST_st6_fsm_5 = 4'b101;
parameter    ap_ST_st7_fsm_6 = 4'b110;
parameter    ap_ST_st8_fsm_7 = 4'b111;
parameter    ap_ST_st9_fsm_8 = 4'b1000;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_CONTROL_WSTRB_WIDTH = (C_S_AXI_CONTROL_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_GMEM_WSTRB_WIDTH = (C_M_AXI_GMEM_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1 : 0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1 : 0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1 : 0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1 : 0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1 : 0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1 : 0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1 : 0] m_axi_gmem_BUSER;
output   interrupt;

wire    ap_start;
reg    ap_done;
reg    ap_idle;
reg   [3:0] ap_CS_fsm = 4'b0000;
reg    ap_ready;
wire   [31:0] input_r;
wire   [31:0] output_r;
wire   [31:0] dense_1_weights;
wire   [31:0] dense_1_bias;
wire   [31:0] dense_2_weights;
wire   [31:0] dense_2_bias;
wire    neural_network_AXILiteS_s_axi_U_ap_dummy_ce;
wire    neural_network_control_s_axi_U_ap_dummy_ce;
wire    gmem_AWVALID;
wire    gmem_AWREADY;
wire   [31:0] gmem_AWADDR;
wire   [0:0] gmem_AWID;
wire   [31:0] gmem_AWLEN;
wire   [2:0] gmem_AWSIZE;
wire   [1:0] gmem_AWBURST;
wire   [1:0] gmem_AWLOCK;
wire   [3:0] gmem_AWCACHE;
wire   [2:0] gmem_AWPROT;
wire   [3:0] gmem_AWQOS;
wire   [3:0] gmem_AWREGION;
wire   [0:0] gmem_AWUSER;
wire    gmem_WVALID;
wire    gmem_WREADY;
wire   [31:0] gmem_WDATA;
wire   [3:0] gmem_WSTRB;
wire    gmem_WLAST;
wire   [0:0] gmem_WID;
wire   [0:0] gmem_WUSER;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [0:0] gmem_ARID;
reg   [31:0] gmem_ARLEN;
reg   [2:0] gmem_ARSIZE;
reg   [1:0] gmem_ARBURST;
reg   [1:0] gmem_ARLOCK;
reg   [3:0] gmem_ARCACHE;
reg   [2:0] gmem_ARPROT;
reg   [3:0] gmem_ARQOS;
reg   [3:0] gmem_ARREGION;
reg   [0:0] gmem_ARUSER;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
wire    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
wire    neural_network_gmem_m_axi_U_ap_dummy_ce;
reg   [29:0] dense_1_bias7_reg_295;
reg   [29:0] dense_1_weights5_reg_300;
reg   [29:0] input1_reg_305;
reg   [29:0] dense_2_bias1_reg_310;
wire    grp_neural_network_dense_1_fu_180_ap_done;
reg   [29:0] dense_2_weights9_reg_315;
reg   [29:0] output3_reg_320;
wire   [7:0] i_fu_276_p2;
reg   [7:0] i_reg_328;
wire   [63:0] tmp_i_fu_282_p1;
reg   [63:0] tmp_i_reg_333;
wire   [0:0] exitcond_i_fu_270_p2;
wire   [31:0] dense_1_out_q0;
reg   [31:0] dense_1_out_load_reg_343;
reg    neural_network_ap_rst;
reg   [6:0] dense_1_out_address0;
reg    dense_1_out_ce0;
reg    dense_1_out_we0;
wire   [31:0] dense_1_out_d0;
reg   [6:0] relu_out_1_address0;
reg    relu_out_1_ce0;
reg    relu_out_1_we0;
wire   [31:0] relu_out_1_d0;
wire   [31:0] relu_out_1_q0;
reg   [3:0] dense_2_out_address0;
reg    dense_2_out_ce0;
reg    dense_2_out_we0;
wire   [31:0] dense_2_out_d0;
wire   [31:0] dense_2_out_q0;
wire    grp_neural_network_softmax_fu_172_ap_start;
wire    grp_neural_network_softmax_fu_172_ap_done;
wire    grp_neural_network_softmax_fu_172_ap_idle;
wire    grp_neural_network_softmax_fu_172_ap_ready;
wire   [3:0] grp_neural_network_softmax_fu_172_input_r_address0;
wire    grp_neural_network_softmax_fu_172_input_r_ce0;
wire   [31:0] grp_neural_network_softmax_fu_172_input_r_q0;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_AWVALID;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_AWREADY;
wire   [31:0] grp_neural_network_softmax_fu_172_m_axi_output_r_AWADDR;
wire   [0:0] grp_neural_network_softmax_fu_172_m_axi_output_r_AWID;
wire   [31:0] grp_neural_network_softmax_fu_172_m_axi_output_r_AWLEN;
wire   [2:0] grp_neural_network_softmax_fu_172_m_axi_output_r_AWSIZE;
wire   [1:0] grp_neural_network_softmax_fu_172_m_axi_output_r_AWBURST;
wire   [1:0] grp_neural_network_softmax_fu_172_m_axi_output_r_AWLOCK;
wire   [3:0] grp_neural_network_softmax_fu_172_m_axi_output_r_AWCACHE;
wire   [2:0] grp_neural_network_softmax_fu_172_m_axi_output_r_AWPROT;
wire   [3:0] grp_neural_network_softmax_fu_172_m_axi_output_r_AWQOS;
wire   [3:0] grp_neural_network_softmax_fu_172_m_axi_output_r_AWREGION;
wire   [0:0] grp_neural_network_softmax_fu_172_m_axi_output_r_AWUSER;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_WVALID;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_WREADY;
wire   [31:0] grp_neural_network_softmax_fu_172_m_axi_output_r_WDATA;
wire   [3:0] grp_neural_network_softmax_fu_172_m_axi_output_r_WSTRB;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_WLAST;
wire   [0:0] grp_neural_network_softmax_fu_172_m_axi_output_r_WID;
wire   [0:0] grp_neural_network_softmax_fu_172_m_axi_output_r_WUSER;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_ARVALID;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_ARREADY;
wire   [31:0] grp_neural_network_softmax_fu_172_m_axi_output_r_ARADDR;
wire   [0:0] grp_neural_network_softmax_fu_172_m_axi_output_r_ARID;
wire   [31:0] grp_neural_network_softmax_fu_172_m_axi_output_r_ARLEN;
wire   [2:0] grp_neural_network_softmax_fu_172_m_axi_output_r_ARSIZE;
wire   [1:0] grp_neural_network_softmax_fu_172_m_axi_output_r_ARBURST;
wire   [1:0] grp_neural_network_softmax_fu_172_m_axi_output_r_ARLOCK;
wire   [3:0] grp_neural_network_softmax_fu_172_m_axi_output_r_ARCACHE;
wire   [2:0] grp_neural_network_softmax_fu_172_m_axi_output_r_ARPROT;
wire   [3:0] grp_neural_network_softmax_fu_172_m_axi_output_r_ARQOS;
wire   [3:0] grp_neural_network_softmax_fu_172_m_axi_output_r_ARREGION;
wire   [0:0] grp_neural_network_softmax_fu_172_m_axi_output_r_ARUSER;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_RVALID;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_RREADY;
wire   [31:0] grp_neural_network_softmax_fu_172_m_axi_output_r_RDATA;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_RLAST;
wire   [0:0] grp_neural_network_softmax_fu_172_m_axi_output_r_RID;
wire   [0:0] grp_neural_network_softmax_fu_172_m_axi_output_r_RUSER;
wire   [1:0] grp_neural_network_softmax_fu_172_m_axi_output_r_RRESP;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_BVALID;
wire    grp_neural_network_softmax_fu_172_m_axi_output_r_BREADY;
wire   [1:0] grp_neural_network_softmax_fu_172_m_axi_output_r_BRESP;
wire   [0:0] grp_neural_network_softmax_fu_172_m_axi_output_r_BID;
wire   [0:0] grp_neural_network_softmax_fu_172_m_axi_output_r_BUSER;
wire   [29:0] grp_neural_network_softmax_fu_172_output3;
wire    grp_neural_network_dense_1_fu_180_ap_start;
wire    grp_neural_network_dense_1_fu_180_ap_idle;
wire    grp_neural_network_dense_1_fu_180_ap_ready;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_AWVALID;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_AWREADY;
wire   [31:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_AWADDR;
wire   [0:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_AWID;
wire   [31:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_AWLEN;
wire   [2:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_AWSIZE;
wire   [1:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_AWBURST;
wire   [1:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_AWLOCK;
wire   [3:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_AWCACHE;
wire   [2:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_AWPROT;
wire   [3:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_AWQOS;
wire   [3:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_AWREGION;
wire   [0:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_AWUSER;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_WVALID;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_WREADY;
wire   [31:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_WDATA;
wire   [3:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_WSTRB;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_WLAST;
wire   [0:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_WID;
wire   [0:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_WUSER;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_ARVALID;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_ARREADY;
wire   [31:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_ARADDR;
wire   [0:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_ARID;
wire   [31:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_ARLEN;
wire   [2:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_ARSIZE;
wire   [1:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_ARBURST;
wire   [1:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_ARLOCK;
wire   [3:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_ARCACHE;
wire   [2:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_ARPROT;
wire   [3:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_ARQOS;
wire   [3:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_ARREGION;
wire   [0:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_ARUSER;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_RVALID;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_RREADY;
wire   [31:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_RDATA;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_RLAST;
wire   [0:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_RID;
wire   [0:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_RUSER;
wire   [1:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_RRESP;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_BVALID;
wire    grp_neural_network_dense_1_fu_180_m_axi_input_r_BREADY;
wire   [1:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_BRESP;
wire   [0:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_BID;
wire   [0:0] grp_neural_network_dense_1_fu_180_m_axi_input_r_BUSER;
wire   [29:0] grp_neural_network_dense_1_fu_180_input1;
wire   [6:0] grp_neural_network_dense_1_fu_180_output_r_address0;
wire    grp_neural_network_dense_1_fu_180_output_r_ce0;
wire    grp_neural_network_dense_1_fu_180_output_r_we0;
wire   [31:0] grp_neural_network_dense_1_fu_180_output_r_d0;
wire   [29:0] grp_neural_network_dense_1_fu_180_dense_1_weights5;
wire   [29:0] grp_neural_network_dense_1_fu_180_dense_1_bias7;
wire    grp_neural_network_dense_2_fu_191_ap_start;
wire    grp_neural_network_dense_2_fu_191_ap_done;
wire    grp_neural_network_dense_2_fu_191_ap_idle;
wire    grp_neural_network_dense_2_fu_191_ap_ready;
wire   [6:0] grp_neural_network_dense_2_fu_191_input_r_address0;
wire    grp_neural_network_dense_2_fu_191_input_r_ce0;
wire   [31:0] grp_neural_network_dense_2_fu_191_input_r_q0;
wire   [3:0] grp_neural_network_dense_2_fu_191_output_r_address0;
wire    grp_neural_network_dense_2_fu_191_output_r_ce0;
wire    grp_neural_network_dense_2_fu_191_output_r_we0;
wire   [31:0] grp_neural_network_dense_2_fu_191_output_r_d0;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_AWVALID;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_AWREADY;
wire   [31:0] grp_neural_network_dense_2_fu_191_m_axi_weights_AWADDR;
wire   [0:0] grp_neural_network_dense_2_fu_191_m_axi_weights_AWID;
wire   [31:0] grp_neural_network_dense_2_fu_191_m_axi_weights_AWLEN;
wire   [2:0] grp_neural_network_dense_2_fu_191_m_axi_weights_AWSIZE;
wire   [1:0] grp_neural_network_dense_2_fu_191_m_axi_weights_AWBURST;
wire   [1:0] grp_neural_network_dense_2_fu_191_m_axi_weights_AWLOCK;
wire   [3:0] grp_neural_network_dense_2_fu_191_m_axi_weights_AWCACHE;
wire   [2:0] grp_neural_network_dense_2_fu_191_m_axi_weights_AWPROT;
wire   [3:0] grp_neural_network_dense_2_fu_191_m_axi_weights_AWQOS;
wire   [3:0] grp_neural_network_dense_2_fu_191_m_axi_weights_AWREGION;
wire   [0:0] grp_neural_network_dense_2_fu_191_m_axi_weights_AWUSER;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_WVALID;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_WREADY;
wire   [31:0] grp_neural_network_dense_2_fu_191_m_axi_weights_WDATA;
wire   [3:0] grp_neural_network_dense_2_fu_191_m_axi_weights_WSTRB;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_WLAST;
wire   [0:0] grp_neural_network_dense_2_fu_191_m_axi_weights_WID;
wire   [0:0] grp_neural_network_dense_2_fu_191_m_axi_weights_WUSER;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_ARVALID;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_ARREADY;
wire   [31:0] grp_neural_network_dense_2_fu_191_m_axi_weights_ARADDR;
wire   [0:0] grp_neural_network_dense_2_fu_191_m_axi_weights_ARID;
wire   [31:0] grp_neural_network_dense_2_fu_191_m_axi_weights_ARLEN;
wire   [2:0] grp_neural_network_dense_2_fu_191_m_axi_weights_ARSIZE;
wire   [1:0] grp_neural_network_dense_2_fu_191_m_axi_weights_ARBURST;
wire   [1:0] grp_neural_network_dense_2_fu_191_m_axi_weights_ARLOCK;
wire   [3:0] grp_neural_network_dense_2_fu_191_m_axi_weights_ARCACHE;
wire   [2:0] grp_neural_network_dense_2_fu_191_m_axi_weights_ARPROT;
wire   [3:0] grp_neural_network_dense_2_fu_191_m_axi_weights_ARQOS;
wire   [3:0] grp_neural_network_dense_2_fu_191_m_axi_weights_ARREGION;
wire   [0:0] grp_neural_network_dense_2_fu_191_m_axi_weights_ARUSER;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_RVALID;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_RREADY;
wire   [31:0] grp_neural_network_dense_2_fu_191_m_axi_weights_RDATA;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_RLAST;
wire   [0:0] grp_neural_network_dense_2_fu_191_m_axi_weights_RID;
wire   [0:0] grp_neural_network_dense_2_fu_191_m_axi_weights_RUSER;
wire   [1:0] grp_neural_network_dense_2_fu_191_m_axi_weights_RRESP;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_BVALID;
wire    grp_neural_network_dense_2_fu_191_m_axi_weights_BREADY;
wire   [1:0] grp_neural_network_dense_2_fu_191_m_axi_weights_BRESP;
wire   [0:0] grp_neural_network_dense_2_fu_191_m_axi_weights_BID;
wire   [0:0] grp_neural_network_dense_2_fu_191_m_axi_weights_BUSER;
wire   [29:0] grp_neural_network_dense_2_fu_191_dense_2_weights9;
wire   [29:0] grp_neural_network_dense_2_fu_191_dense_2_bias11;
reg   [7:0] i_i_reg_160;
reg    grp_neural_network_softmax_fu_172_ap_start_ap_start_reg = 1'b0;
reg    grp_neural_network_dense_1_fu_180_ap_start_ap_start_reg = 1'b0;
reg    grp_neural_network_dense_2_fu_191_ap_start_ap_start_reg = 1'b0;
wire   [31:0] grp_fu_201_p0;
wire   [31:0] grp_fu_201_p1;
wire   [0:0] grp_fu_201_p2;
wire    grp_fu_201_ce;
wire   [4:0] grp_fu_201_opcode;
reg   [3:0] ap_NS_fsm;


neural_network_AXILiteS_s_axi #(
    .C_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
neural_network_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .ACLK_EN( neural_network_AXILiteS_s_axi_U_ap_dummy_ce ),
    .input_r( input_r ),
    .output_r( output_r ),
    .dense_1_weights( dense_1_weights ),
    .dense_1_bias( dense_1_bias ),
    .dense_2_weights( dense_2_weights ),
    .dense_2_bias( dense_2_bias )
);

neural_network_control_s_axi #(
    .C_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
neural_network_control_s_axi_U(
    .AWVALID( s_axi_control_AWVALID ),
    .AWREADY( s_axi_control_AWREADY ),
    .AWADDR( s_axi_control_AWADDR ),
    .WVALID( s_axi_control_WVALID ),
    .WREADY( s_axi_control_WREADY ),
    .WDATA( s_axi_control_WDATA ),
    .WSTRB( s_axi_control_WSTRB ),
    .ARVALID( s_axi_control_ARVALID ),
    .ARREADY( s_axi_control_ARREADY ),
    .ARADDR( s_axi_control_ARADDR ),
    .RVALID( s_axi_control_RVALID ),
    .RREADY( s_axi_control_RREADY ),
    .RDATA( s_axi_control_RDATA ),
    .RRESP( s_axi_control_RRESP ),
    .BVALID( s_axi_control_BVALID ),
    .BREADY( s_axi_control_BREADY ),
    .BRESP( s_axi_control_BRESP ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .ACLK_EN( neural_network_control_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle )
);

neural_network_gmem_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
neural_network_gmem_m_axi_U(
    .AWVALID( m_axi_gmem_AWVALID ),
    .AWREADY( m_axi_gmem_AWREADY ),
    .AWADDR( m_axi_gmem_AWADDR ),
    .AWID( m_axi_gmem_AWID ),
    .AWLEN( m_axi_gmem_AWLEN ),
    .AWSIZE( m_axi_gmem_AWSIZE ),
    .AWBURST( m_axi_gmem_AWBURST ),
    .AWLOCK( m_axi_gmem_AWLOCK ),
    .AWCACHE( m_axi_gmem_AWCACHE ),
    .AWPROT( m_axi_gmem_AWPROT ),
    .AWQOS( m_axi_gmem_AWQOS ),
    .AWREGION( m_axi_gmem_AWREGION ),
    .AWUSER( m_axi_gmem_AWUSER ),
    .WVALID( m_axi_gmem_WVALID ),
    .WREADY( m_axi_gmem_WREADY ),
    .WDATA( m_axi_gmem_WDATA ),
    .WSTRB( m_axi_gmem_WSTRB ),
    .WLAST( m_axi_gmem_WLAST ),
    .WID( m_axi_gmem_WID ),
    .WUSER( m_axi_gmem_WUSER ),
    .ARVALID( m_axi_gmem_ARVALID ),
    .ARREADY( m_axi_gmem_ARREADY ),
    .ARADDR( m_axi_gmem_ARADDR ),
    .ARID( m_axi_gmem_ARID ),
    .ARLEN( m_axi_gmem_ARLEN ),
    .ARSIZE( m_axi_gmem_ARSIZE ),
    .ARBURST( m_axi_gmem_ARBURST ),
    .ARLOCK( m_axi_gmem_ARLOCK ),
    .ARCACHE( m_axi_gmem_ARCACHE ),
    .ARPROT( m_axi_gmem_ARPROT ),
    .ARQOS( m_axi_gmem_ARQOS ),
    .ARREGION( m_axi_gmem_ARREGION ),
    .ARUSER( m_axi_gmem_ARUSER ),
    .RVALID( m_axi_gmem_RVALID ),
    .RREADY( m_axi_gmem_RREADY ),
    .RDATA( m_axi_gmem_RDATA ),
    .RLAST( m_axi_gmem_RLAST ),
    .RID( m_axi_gmem_RID ),
    .RUSER( m_axi_gmem_RUSER ),
    .RRESP( m_axi_gmem_RRESP ),
    .BVALID( m_axi_gmem_BVALID ),
    .BREADY( m_axi_gmem_BREADY ),
    .BRESP( m_axi_gmem_BRESP ),
    .BID( m_axi_gmem_BID ),
    .BUSER( m_axi_gmem_BUSER ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .ACLK_EN( neural_network_gmem_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( gmem_ARVALID ),
    .I_ARREADY( gmem_ARREADY ),
    .I_ARADDR( gmem_ARADDR ),
    .I_ARID( gmem_ARID ),
    .I_ARLEN( gmem_ARLEN ),
    .I_ARSIZE( gmem_ARSIZE ),
    .I_ARLOCK( gmem_ARLOCK ),
    .I_ARCACHE( gmem_ARCACHE ),
    .I_ARQOS( gmem_ARQOS ),
    .I_ARPROT( gmem_ARPROT ),
    .I_ARUSER( gmem_ARUSER ),
    .I_ARBURST( gmem_ARBURST ),
    .I_ARREGION( gmem_ARREGION ),
    .I_RVALID( gmem_RVALID ),
    .I_RREADY( gmem_RREADY ),
    .I_RDATA( gmem_RDATA ),
    .I_RID( gmem_RID ),
    .I_RUSER( gmem_RUSER ),
    .I_RRESP( gmem_RRESP ),
    .I_RLAST( gmem_RLAST ),
    .I_AWVALID( gmem_AWVALID ),
    .I_AWREADY( gmem_AWREADY ),
    .I_AWADDR( gmem_AWADDR ),
    .I_AWID( gmem_AWID ),
    .I_AWLEN( gmem_AWLEN ),
    .I_AWSIZE( gmem_AWSIZE ),
    .I_AWLOCK( gmem_AWLOCK ),
    .I_AWCACHE( gmem_AWCACHE ),
    .I_AWQOS( gmem_AWQOS ),
    .I_AWPROT( gmem_AWPROT ),
    .I_AWUSER( gmem_AWUSER ),
    .I_AWBURST( gmem_AWBURST ),
    .I_AWREGION( gmem_AWREGION ),
    .I_WVALID( gmem_WVALID ),
    .I_WREADY( gmem_WREADY ),
    .I_WDATA( gmem_WDATA ),
    .I_WID( gmem_WID ),
    .I_WUSER( gmem_WUSER ),
    .I_WLAST( gmem_WLAST ),
    .I_WSTRB( gmem_WSTRB ),
    .I_BVALID( gmem_BVALID ),
    .I_BREADY( gmem_BREADY ),
    .I_BRESP( gmem_BRESP ),
    .I_BID( gmem_BID ),
    .I_BUSER( gmem_BUSER )
);

neural_network_dense_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
dense_1_out_U(
    .clk( ap_clk ),
    .reset( neural_network_ap_rst ),
    .address0( dense_1_out_address0 ),
    .ce0( dense_1_out_ce0 ),
    .we0( dense_1_out_we0 ),
    .d0( dense_1_out_d0 ),
    .q0( dense_1_out_q0 )
);

neural_network_dense_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
relu_out_1_U(
    .clk( ap_clk ),
    .reset( neural_network_ap_rst ),
    .address0( relu_out_1_address0 ),
    .ce0( relu_out_1_ce0 ),
    .we0( relu_out_1_we0 ),
    .d0( relu_out_1_d0 ),
    .q0( relu_out_1_q0 )
);

neural_network_dense_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_2_out_U(
    .clk( ap_clk ),
    .reset( neural_network_ap_rst ),
    .address0( dense_2_out_address0 ),
    .ce0( dense_2_out_ce0 ),
    .we0( dense_2_out_we0 ),
    .d0( dense_2_out_d0 ),
    .q0( dense_2_out_q0 )
);

neural_network_softmax grp_neural_network_softmax_fu_172(
    .ap_clk( ap_clk ),
    .ap_rst_n( ap_rst_n ),
    .ap_start( grp_neural_network_softmax_fu_172_ap_start ),
    .ap_done( grp_neural_network_softmax_fu_172_ap_done ),
    .ap_idle( grp_neural_network_softmax_fu_172_ap_idle ),
    .ap_ready( grp_neural_network_softmax_fu_172_ap_ready ),
    .input_r_address0( grp_neural_network_softmax_fu_172_input_r_address0 ),
    .input_r_ce0( grp_neural_network_softmax_fu_172_input_r_ce0 ),
    .input_r_q0( grp_neural_network_softmax_fu_172_input_r_q0 ),
    .m_axi_output_r_AWVALID( grp_neural_network_softmax_fu_172_m_axi_output_r_AWVALID ),
    .m_axi_output_r_AWREADY( grp_neural_network_softmax_fu_172_m_axi_output_r_AWREADY ),
    .m_axi_output_r_AWADDR( grp_neural_network_softmax_fu_172_m_axi_output_r_AWADDR ),
    .m_axi_output_r_AWID( grp_neural_network_softmax_fu_172_m_axi_output_r_AWID ),
    .m_axi_output_r_AWLEN( grp_neural_network_softmax_fu_172_m_axi_output_r_AWLEN ),
    .m_axi_output_r_AWSIZE( grp_neural_network_softmax_fu_172_m_axi_output_r_AWSIZE ),
    .m_axi_output_r_AWBURST( grp_neural_network_softmax_fu_172_m_axi_output_r_AWBURST ),
    .m_axi_output_r_AWLOCK( grp_neural_network_softmax_fu_172_m_axi_output_r_AWLOCK ),
    .m_axi_output_r_AWCACHE( grp_neural_network_softmax_fu_172_m_axi_output_r_AWCACHE ),
    .m_axi_output_r_AWPROT( grp_neural_network_softmax_fu_172_m_axi_output_r_AWPROT ),
    .m_axi_output_r_AWQOS( grp_neural_network_softmax_fu_172_m_axi_output_r_AWQOS ),
    .m_axi_output_r_AWREGION( grp_neural_network_softmax_fu_172_m_axi_output_r_AWREGION ),
    .m_axi_output_r_AWUSER( grp_neural_network_softmax_fu_172_m_axi_output_r_AWUSER ),
    .m_axi_output_r_WVALID( grp_neural_network_softmax_fu_172_m_axi_output_r_WVALID ),
    .m_axi_output_r_WREADY( grp_neural_network_softmax_fu_172_m_axi_output_r_WREADY ),
    .m_axi_output_r_WDATA( grp_neural_network_softmax_fu_172_m_axi_output_r_WDATA ),
    .m_axi_output_r_WSTRB( grp_neural_network_softmax_fu_172_m_axi_output_r_WSTRB ),
    .m_axi_output_r_WLAST( grp_neural_network_softmax_fu_172_m_axi_output_r_WLAST ),
    .m_axi_output_r_WID( grp_neural_network_softmax_fu_172_m_axi_output_r_WID ),
    .m_axi_output_r_WUSER( grp_neural_network_softmax_fu_172_m_axi_output_r_WUSER ),
    .m_axi_output_r_ARVALID( grp_neural_network_softmax_fu_172_m_axi_output_r_ARVALID ),
    .m_axi_output_r_ARREADY( grp_neural_network_softmax_fu_172_m_axi_output_r_ARREADY ),
    .m_axi_output_r_ARADDR( grp_neural_network_softmax_fu_172_m_axi_output_r_ARADDR ),
    .m_axi_output_r_ARID( grp_neural_network_softmax_fu_172_m_axi_output_r_ARID ),
    .m_axi_output_r_ARLEN( grp_neural_network_softmax_fu_172_m_axi_output_r_ARLEN ),
    .m_axi_output_r_ARSIZE( grp_neural_network_softmax_fu_172_m_axi_output_r_ARSIZE ),
    .m_axi_output_r_ARBURST( grp_neural_network_softmax_fu_172_m_axi_output_r_ARBURST ),
    .m_axi_output_r_ARLOCK( grp_neural_network_softmax_fu_172_m_axi_output_r_ARLOCK ),
    .m_axi_output_r_ARCACHE( grp_neural_network_softmax_fu_172_m_axi_output_r_ARCACHE ),
    .m_axi_output_r_ARPROT( grp_neural_network_softmax_fu_172_m_axi_output_r_ARPROT ),
    .m_axi_output_r_ARQOS( grp_neural_network_softmax_fu_172_m_axi_output_r_ARQOS ),
    .m_axi_output_r_ARREGION( grp_neural_network_softmax_fu_172_m_axi_output_r_ARREGION ),
    .m_axi_output_r_ARUSER( grp_neural_network_softmax_fu_172_m_axi_output_r_ARUSER ),
    .m_axi_output_r_RVALID( grp_neural_network_softmax_fu_172_m_axi_output_r_RVALID ),
    .m_axi_output_r_RREADY( grp_neural_network_softmax_fu_172_m_axi_output_r_RREADY ),
    .m_axi_output_r_RDATA( grp_neural_network_softmax_fu_172_m_axi_output_r_RDATA ),
    .m_axi_output_r_RLAST( grp_neural_network_softmax_fu_172_m_axi_output_r_RLAST ),
    .m_axi_output_r_RID( grp_neural_network_softmax_fu_172_m_axi_output_r_RID ),
    .m_axi_output_r_RUSER( grp_neural_network_softmax_fu_172_m_axi_output_r_RUSER ),
    .m_axi_output_r_RRESP( grp_neural_network_softmax_fu_172_m_axi_output_r_RRESP ),
    .m_axi_output_r_BVALID( grp_neural_network_softmax_fu_172_m_axi_output_r_BVALID ),
    .m_axi_output_r_BREADY( grp_neural_network_softmax_fu_172_m_axi_output_r_BREADY ),
    .m_axi_output_r_BRESP( grp_neural_network_softmax_fu_172_m_axi_output_r_BRESP ),
    .m_axi_output_r_BID( grp_neural_network_softmax_fu_172_m_axi_output_r_BID ),
    .m_axi_output_r_BUSER( grp_neural_network_softmax_fu_172_m_axi_output_r_BUSER ),
    .output3( grp_neural_network_softmax_fu_172_output3 )
);

neural_network_dense_1 grp_neural_network_dense_1_fu_180(
    .ap_clk( ap_clk ),
    .ap_rst_n( ap_rst_n ),
    .ap_start( grp_neural_network_dense_1_fu_180_ap_start ),
    .ap_done( grp_neural_network_dense_1_fu_180_ap_done ),
    .ap_idle( grp_neural_network_dense_1_fu_180_ap_idle ),
    .ap_ready( grp_neural_network_dense_1_fu_180_ap_ready ),
    .m_axi_input_r_AWVALID( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWVALID ),
    .m_axi_input_r_AWREADY( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWREADY ),
    .m_axi_input_r_AWADDR( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWADDR ),
    .m_axi_input_r_AWID( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWID ),
    .m_axi_input_r_AWLEN( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWLEN ),
    .m_axi_input_r_AWSIZE( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWSIZE ),
    .m_axi_input_r_AWBURST( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWBURST ),
    .m_axi_input_r_AWLOCK( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWLOCK ),
    .m_axi_input_r_AWCACHE( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWCACHE ),
    .m_axi_input_r_AWPROT( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWPROT ),
    .m_axi_input_r_AWQOS( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWQOS ),
    .m_axi_input_r_AWREGION( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWREGION ),
    .m_axi_input_r_AWUSER( grp_neural_network_dense_1_fu_180_m_axi_input_r_AWUSER ),
    .m_axi_input_r_WVALID( grp_neural_network_dense_1_fu_180_m_axi_input_r_WVALID ),
    .m_axi_input_r_WREADY( grp_neural_network_dense_1_fu_180_m_axi_input_r_WREADY ),
    .m_axi_input_r_WDATA( grp_neural_network_dense_1_fu_180_m_axi_input_r_WDATA ),
    .m_axi_input_r_WSTRB( grp_neural_network_dense_1_fu_180_m_axi_input_r_WSTRB ),
    .m_axi_input_r_WLAST( grp_neural_network_dense_1_fu_180_m_axi_input_r_WLAST ),
    .m_axi_input_r_WID( grp_neural_network_dense_1_fu_180_m_axi_input_r_WID ),
    .m_axi_input_r_WUSER( grp_neural_network_dense_1_fu_180_m_axi_input_r_WUSER ),
    .m_axi_input_r_ARVALID( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARVALID ),
    .m_axi_input_r_ARREADY( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARREADY ),
    .m_axi_input_r_ARADDR( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARADDR ),
    .m_axi_input_r_ARID( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARID ),
    .m_axi_input_r_ARLEN( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARLEN ),
    .m_axi_input_r_ARSIZE( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARSIZE ),
    .m_axi_input_r_ARBURST( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARBURST ),
    .m_axi_input_r_ARLOCK( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARLOCK ),
    .m_axi_input_r_ARCACHE( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARCACHE ),
    .m_axi_input_r_ARPROT( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARPROT ),
    .m_axi_input_r_ARQOS( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARQOS ),
    .m_axi_input_r_ARREGION( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARREGION ),
    .m_axi_input_r_ARUSER( grp_neural_network_dense_1_fu_180_m_axi_input_r_ARUSER ),
    .m_axi_input_r_RVALID( grp_neural_network_dense_1_fu_180_m_axi_input_r_RVALID ),
    .m_axi_input_r_RREADY( grp_neural_network_dense_1_fu_180_m_axi_input_r_RREADY ),
    .m_axi_input_r_RDATA( grp_neural_network_dense_1_fu_180_m_axi_input_r_RDATA ),
    .m_axi_input_r_RLAST( grp_neural_network_dense_1_fu_180_m_axi_input_r_RLAST ),
    .m_axi_input_r_RID( grp_neural_network_dense_1_fu_180_m_axi_input_r_RID ),
    .m_axi_input_r_RUSER( grp_neural_network_dense_1_fu_180_m_axi_input_r_RUSER ),
    .m_axi_input_r_RRESP( grp_neural_network_dense_1_fu_180_m_axi_input_r_RRESP ),
    .m_axi_input_r_BVALID( grp_neural_network_dense_1_fu_180_m_axi_input_r_BVALID ),
    .m_axi_input_r_BREADY( grp_neural_network_dense_1_fu_180_m_axi_input_r_BREADY ),
    .m_axi_input_r_BRESP( grp_neural_network_dense_1_fu_180_m_axi_input_r_BRESP ),
    .m_axi_input_r_BID( grp_neural_network_dense_1_fu_180_m_axi_input_r_BID ),
    .m_axi_input_r_BUSER( grp_neural_network_dense_1_fu_180_m_axi_input_r_BUSER ),
    .input1( grp_neural_network_dense_1_fu_180_input1 ),
    .output_r_address0( grp_neural_network_dense_1_fu_180_output_r_address0 ),
    .output_r_ce0( grp_neural_network_dense_1_fu_180_output_r_ce0 ),
    .output_r_we0( grp_neural_network_dense_1_fu_180_output_r_we0 ),
    .output_r_d0( grp_neural_network_dense_1_fu_180_output_r_d0 ),
    .dense_1_weights5( grp_neural_network_dense_1_fu_180_dense_1_weights5 ),
    .dense_1_bias7( grp_neural_network_dense_1_fu_180_dense_1_bias7 )
);

neural_network_dense_2 grp_neural_network_dense_2_fu_191(
    .ap_clk( ap_clk ),
    .ap_rst_n( ap_rst_n ),
    .ap_start( grp_neural_network_dense_2_fu_191_ap_start ),
    .ap_done( grp_neural_network_dense_2_fu_191_ap_done ),
    .ap_idle( grp_neural_network_dense_2_fu_191_ap_idle ),
    .ap_ready( grp_neural_network_dense_2_fu_191_ap_ready ),
    .input_r_address0( grp_neural_network_dense_2_fu_191_input_r_address0 ),
    .input_r_ce0( grp_neural_network_dense_2_fu_191_input_r_ce0 ),
    .input_r_q0( grp_neural_network_dense_2_fu_191_input_r_q0 ),
    .output_r_address0( grp_neural_network_dense_2_fu_191_output_r_address0 ),
    .output_r_ce0( grp_neural_network_dense_2_fu_191_output_r_ce0 ),
    .output_r_we0( grp_neural_network_dense_2_fu_191_output_r_we0 ),
    .output_r_d0( grp_neural_network_dense_2_fu_191_output_r_d0 ),
    .m_axi_weights_AWVALID( grp_neural_network_dense_2_fu_191_m_axi_weights_AWVALID ),
    .m_axi_weights_AWREADY( grp_neural_network_dense_2_fu_191_m_axi_weights_AWREADY ),
    .m_axi_weights_AWADDR( grp_neural_network_dense_2_fu_191_m_axi_weights_AWADDR ),
    .m_axi_weights_AWID( grp_neural_network_dense_2_fu_191_m_axi_weights_AWID ),
    .m_axi_weights_AWLEN( grp_neural_network_dense_2_fu_191_m_axi_weights_AWLEN ),
    .m_axi_weights_AWSIZE( grp_neural_network_dense_2_fu_191_m_axi_weights_AWSIZE ),
    .m_axi_weights_AWBURST( grp_neural_network_dense_2_fu_191_m_axi_weights_AWBURST ),
    .m_axi_weights_AWLOCK( grp_neural_network_dense_2_fu_191_m_axi_weights_AWLOCK ),
    .m_axi_weights_AWCACHE( grp_neural_network_dense_2_fu_191_m_axi_weights_AWCACHE ),
    .m_axi_weights_AWPROT( grp_neural_network_dense_2_fu_191_m_axi_weights_AWPROT ),
    .m_axi_weights_AWQOS( grp_neural_network_dense_2_fu_191_m_axi_weights_AWQOS ),
    .m_axi_weights_AWREGION( grp_neural_network_dense_2_fu_191_m_axi_weights_AWREGION ),
    .m_axi_weights_AWUSER( grp_neural_network_dense_2_fu_191_m_axi_weights_AWUSER ),
    .m_axi_weights_WVALID( grp_neural_network_dense_2_fu_191_m_axi_weights_WVALID ),
    .m_axi_weights_WREADY( grp_neural_network_dense_2_fu_191_m_axi_weights_WREADY ),
    .m_axi_weights_WDATA( grp_neural_network_dense_2_fu_191_m_axi_weights_WDATA ),
    .m_axi_weights_WSTRB( grp_neural_network_dense_2_fu_191_m_axi_weights_WSTRB ),
    .m_axi_weights_WLAST( grp_neural_network_dense_2_fu_191_m_axi_weights_WLAST ),
    .m_axi_weights_WID( grp_neural_network_dense_2_fu_191_m_axi_weights_WID ),
    .m_axi_weights_WUSER( grp_neural_network_dense_2_fu_191_m_axi_weights_WUSER ),
    .m_axi_weights_ARVALID( grp_neural_network_dense_2_fu_191_m_axi_weights_ARVALID ),
    .m_axi_weights_ARREADY( grp_neural_network_dense_2_fu_191_m_axi_weights_ARREADY ),
    .m_axi_weights_ARADDR( grp_neural_network_dense_2_fu_191_m_axi_weights_ARADDR ),
    .m_axi_weights_ARID( grp_neural_network_dense_2_fu_191_m_axi_weights_ARID ),
    .m_axi_weights_ARLEN( grp_neural_network_dense_2_fu_191_m_axi_weights_ARLEN ),
    .m_axi_weights_ARSIZE( grp_neural_network_dense_2_fu_191_m_axi_weights_ARSIZE ),
    .m_axi_weights_ARBURST( grp_neural_network_dense_2_fu_191_m_axi_weights_ARBURST ),
    .m_axi_weights_ARLOCK( grp_neural_network_dense_2_fu_191_m_axi_weights_ARLOCK ),
    .m_axi_weights_ARCACHE( grp_neural_network_dense_2_fu_191_m_axi_weights_ARCACHE ),
    .m_axi_weights_ARPROT( grp_neural_network_dense_2_fu_191_m_axi_weights_ARPROT ),
    .m_axi_weights_ARQOS( grp_neural_network_dense_2_fu_191_m_axi_weights_ARQOS ),
    .m_axi_weights_ARREGION( grp_neural_network_dense_2_fu_191_m_axi_weights_ARREGION ),
    .m_axi_weights_ARUSER( grp_neural_network_dense_2_fu_191_m_axi_weights_ARUSER ),
    .m_axi_weights_RVALID( grp_neural_network_dense_2_fu_191_m_axi_weights_RVALID ),
    .m_axi_weights_RREADY( grp_neural_network_dense_2_fu_191_m_axi_weights_RREADY ),
    .m_axi_weights_RDATA( grp_neural_network_dense_2_fu_191_m_axi_weights_RDATA ),
    .m_axi_weights_RLAST( grp_neural_network_dense_2_fu_191_m_axi_weights_RLAST ),
    .m_axi_weights_RID( grp_neural_network_dense_2_fu_191_m_axi_weights_RID ),
    .m_axi_weights_RUSER( grp_neural_network_dense_2_fu_191_m_axi_weights_RUSER ),
    .m_axi_weights_RRESP( grp_neural_network_dense_2_fu_191_m_axi_weights_RRESP ),
    .m_axi_weights_BVALID( grp_neural_network_dense_2_fu_191_m_axi_weights_BVALID ),
    .m_axi_weights_BREADY( grp_neural_network_dense_2_fu_191_m_axi_weights_BREADY ),
    .m_axi_weights_BRESP( grp_neural_network_dense_2_fu_191_m_axi_weights_BRESP ),
    .m_axi_weights_BID( grp_neural_network_dense_2_fu_191_m_axi_weights_BID ),
    .m_axi_weights_BUSER( grp_neural_network_dense_2_fu_191_m_axi_weights_BUSER ),
    .dense_2_weights9( grp_neural_network_dense_2_fu_191_dense_2_weights9 ),
    .dense_2_bias11( grp_neural_network_dense_2_fu_191_dense_2_bias11 )
);

neural_network_fcmp_32ns_32ns_1_3 #(
    .ID( 22 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
neural_network_fcmp_32ns_32ns_1_3_U22(
    .clk( ap_clk ),
    .reset( neural_network_ap_rst ),
    .din0( grp_fu_201_p0 ),
    .din1( grp_fu_201_p1 ),
    .ce( grp_fu_201_ce ),
    .opcode( grp_fu_201_opcode ),
    .dout( grp_fu_201_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n == 1'b0) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_neural_network_dense_1_fu_180_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_neural_network_dense_1_fu_180_ap_start_ap_start_reg
    if (ap_rst_n == 1'b0) begin
        grp_neural_network_dense_1_fu_180_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            grp_neural_network_dense_1_fu_180_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_neural_network_dense_1_fu_180_ap_ready)) begin
            grp_neural_network_dense_1_fu_180_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_neural_network_dense_2_fu_191_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_neural_network_dense_2_fu_191_ap_start_ap_start_reg
    if (ap_rst_n == 1'b0) begin
        grp_neural_network_dense_2_fu_191_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0))) begin
            grp_neural_network_dense_2_fu_191_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_neural_network_dense_2_fu_191_ap_ready)) begin
            grp_neural_network_dense_2_fu_191_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_neural_network_softmax_fu_172_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_neural_network_softmax_fu_172_ap_start_ap_start_reg
    if (ap_rst_n == 1'b0) begin
        grp_neural_network_softmax_fu_172_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
            grp_neural_network_softmax_fu_172_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_neural_network_softmax_fu_172_ap_ready)) begin
            grp_neural_network_softmax_fu_172_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        i_i_reg_160 <= i_reg_328;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_neural_network_dense_1_fu_180_ap_done))) begin
        i_i_reg_160 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        dense_1_bias7_reg_295 <= {{dense_1_bias[ap_const_lv32_1F : ap_const_lv32_2]}};
        dense_1_weights5_reg_300 <= {{dense_1_weights[ap_const_lv32_1F : ap_const_lv32_2]}};
        input1_reg_305 <= {{input_r[ap_const_lv32_1F : ap_const_lv32_2]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        dense_1_out_load_reg_343 <= dense_1_out_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_neural_network_dense_1_fu_180_ap_done))) begin
        dense_2_bias1_reg_310 <= {{dense_2_bias[ap_const_lv32_1F : ap_const_lv32_2]}};
        dense_2_weights9_reg_315 <= {{dense_2_weights[ap_const_lv32_1F : ap_const_lv32_2]}};
        output3_reg_320 <= {{output_r[ap_const_lv32_1F : ap_const_lv32_2]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        i_reg_328 <= i_fu_276_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (exitcond_i_fu_270_p2 == ap_const_lv1_0))) begin
        tmp_i_reg_333[0] <= tmp_i_fu_282_p1[0];
tmp_i_reg_333[1] <= tmp_i_fu_282_p1[1];
tmp_i_reg_333[2] <= tmp_i_fu_282_p1[2];
tmp_i_reg_333[3] <= tmp_i_fu_282_p1[3];
tmp_i_reg_333[4] <= tmp_i_fu_282_p1[4];
tmp_i_reg_333[5] <= tmp_i_fu_282_p1[5];
tmp_i_reg_333[6] <= tmp_i_fu_282_p1[6];
tmp_i_reg_333[7] <= tmp_i_fu_282_p1[7];
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm or grp_neural_network_softmax_fu_172_ap_done)
begin
    if (((ap_ST_st9_fsm_8 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_neural_network_softmax_fu_172_ap_done))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or grp_neural_network_softmax_fu_172_ap_done)
begin
    if (((ap_ST_st9_fsm_8 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_neural_network_softmax_fu_172_ap_done))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// dense_1_out_address0 assign process. ///
always @ (ap_CS_fsm or tmp_i_fu_282_p1 or grp_neural_network_dense_1_fu_180_output_r_address0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        dense_1_out_address0 = tmp_i_fu_282_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        dense_1_out_address0 = grp_neural_network_dense_1_fu_180_output_r_address0;
    end else begin
        dense_1_out_address0 = 'bx;
    end
end

/// dense_1_out_ce0 assign process. ///
always @ (ap_CS_fsm or grp_neural_network_dense_1_fu_180_output_r_ce0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        dense_1_out_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        dense_1_out_ce0 = grp_neural_network_dense_1_fu_180_output_r_ce0;
    end else begin
        dense_1_out_ce0 = ap_const_logic_0;
    end
end

/// dense_1_out_we0 assign process. ///
always @ (ap_CS_fsm or grp_neural_network_dense_1_fu_180_output_r_we0)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        dense_1_out_we0 = grp_neural_network_dense_1_fu_180_output_r_we0;
    end else begin
        dense_1_out_we0 = ap_const_logic_0;
    end
end

/// dense_2_out_address0 assign process. ///
always @ (ap_CS_fsm or grp_neural_network_softmax_fu_172_input_r_address0 or grp_neural_network_dense_2_fu_191_output_r_address0)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        dense_2_out_address0 = grp_neural_network_dense_2_fu_191_output_r_address0;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        dense_2_out_address0 = grp_neural_network_softmax_fu_172_input_r_address0;
    end else begin
        dense_2_out_address0 = 'bx;
    end
end

/// dense_2_out_ce0 assign process. ///
always @ (ap_CS_fsm or grp_neural_network_softmax_fu_172_input_r_ce0 or grp_neural_network_dense_2_fu_191_output_r_ce0)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        dense_2_out_ce0 = grp_neural_network_dense_2_fu_191_output_r_ce0;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        dense_2_out_ce0 = grp_neural_network_softmax_fu_172_input_r_ce0;
    end else begin
        dense_2_out_ce0 = ap_const_logic_0;
    end
end

/// dense_2_out_we0 assign process. ///
always @ (ap_CS_fsm or grp_neural_network_dense_2_fu_191_output_r_we0)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        dense_2_out_we0 = grp_neural_network_dense_2_fu_191_output_r_we0;
    end else begin
        dense_2_out_we0 = ap_const_logic_0;
    end
end

/// gmem_ARADDR assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARADDR or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARADDR or grp_neural_network_dense_2_fu_191_m_axi_weights_ARADDR)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARADDR = grp_neural_network_dense_2_fu_191_m_axi_weights_ARADDR;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARADDR = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARADDR;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARADDR = grp_neural_network_softmax_fu_172_m_axi_output_r_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

/// gmem_ARBURST assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARBURST or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARBURST or grp_neural_network_dense_2_fu_191_m_axi_weights_ARBURST)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARBURST = grp_neural_network_dense_2_fu_191_m_axi_weights_ARBURST;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARBURST = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARBURST;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARBURST = grp_neural_network_softmax_fu_172_m_axi_output_r_ARBURST;
    end else begin
        gmem_ARBURST = 'bx;
    end
end

/// gmem_ARCACHE assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARCACHE or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARCACHE or grp_neural_network_dense_2_fu_191_m_axi_weights_ARCACHE)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARCACHE = grp_neural_network_dense_2_fu_191_m_axi_weights_ARCACHE;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARCACHE = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARCACHE;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARCACHE = grp_neural_network_softmax_fu_172_m_axi_output_r_ARCACHE;
    end else begin
        gmem_ARCACHE = 'bx;
    end
end

/// gmem_ARID assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARID or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARID or grp_neural_network_dense_2_fu_191_m_axi_weights_ARID)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARID = grp_neural_network_dense_2_fu_191_m_axi_weights_ARID;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARID = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARID;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARID = grp_neural_network_softmax_fu_172_m_axi_output_r_ARID;
    end else begin
        gmem_ARID = 'bx;
    end
end

/// gmem_ARLEN assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARLEN or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARLEN or grp_neural_network_dense_2_fu_191_m_axi_weights_ARLEN)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARLEN = grp_neural_network_dense_2_fu_191_m_axi_weights_ARLEN;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARLEN = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARLEN;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARLEN = grp_neural_network_softmax_fu_172_m_axi_output_r_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

/// gmem_ARLOCK assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARLOCK or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARLOCK or grp_neural_network_dense_2_fu_191_m_axi_weights_ARLOCK)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARLOCK = grp_neural_network_dense_2_fu_191_m_axi_weights_ARLOCK;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARLOCK = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARLOCK;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARLOCK = grp_neural_network_softmax_fu_172_m_axi_output_r_ARLOCK;
    end else begin
        gmem_ARLOCK = 'bx;
    end
end

/// gmem_ARPROT assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARPROT or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARPROT or grp_neural_network_dense_2_fu_191_m_axi_weights_ARPROT)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARPROT = grp_neural_network_dense_2_fu_191_m_axi_weights_ARPROT;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARPROT = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARPROT;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARPROT = grp_neural_network_softmax_fu_172_m_axi_output_r_ARPROT;
    end else begin
        gmem_ARPROT = 'bx;
    end
end

/// gmem_ARQOS assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARQOS or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARQOS or grp_neural_network_dense_2_fu_191_m_axi_weights_ARQOS)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARQOS = grp_neural_network_dense_2_fu_191_m_axi_weights_ARQOS;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARQOS = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARQOS;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARQOS = grp_neural_network_softmax_fu_172_m_axi_output_r_ARQOS;
    end else begin
        gmem_ARQOS = 'bx;
    end
end

/// gmem_ARREGION assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARREGION or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARREGION or grp_neural_network_dense_2_fu_191_m_axi_weights_ARREGION)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARREGION = grp_neural_network_dense_2_fu_191_m_axi_weights_ARREGION;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARREGION = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARREGION;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARREGION = grp_neural_network_softmax_fu_172_m_axi_output_r_ARREGION;
    end else begin
        gmem_ARREGION = 'bx;
    end
end

/// gmem_ARSIZE assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARSIZE or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARSIZE or grp_neural_network_dense_2_fu_191_m_axi_weights_ARSIZE)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARSIZE = grp_neural_network_dense_2_fu_191_m_axi_weights_ARSIZE;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARSIZE = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARSIZE;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARSIZE = grp_neural_network_softmax_fu_172_m_axi_output_r_ARSIZE;
    end else begin
        gmem_ARSIZE = 'bx;
    end
end

/// gmem_ARUSER assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARUSER or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARUSER or grp_neural_network_dense_2_fu_191_m_axi_weights_ARUSER)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARUSER = grp_neural_network_dense_2_fu_191_m_axi_weights_ARUSER;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARUSER = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARUSER;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARUSER = grp_neural_network_softmax_fu_172_m_axi_output_r_ARUSER;
    end else begin
        gmem_ARUSER = 'bx;
    end
end

/// gmem_ARVALID assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_ARVALID or grp_neural_network_dense_1_fu_180_m_axi_input_r_ARVALID or grp_neural_network_dense_2_fu_191_m_axi_weights_ARVALID)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_ARVALID = grp_neural_network_dense_2_fu_191_m_axi_weights_ARVALID;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_ARVALID = grp_neural_network_dense_1_fu_180_m_axi_input_r_ARVALID;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_ARVALID = grp_neural_network_softmax_fu_172_m_axi_output_r_ARVALID;
    end else begin
        gmem_ARVALID = 'bx;
    end
end

/// gmem_RREADY assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_m_axi_output_r_RREADY or grp_neural_network_dense_1_fu_180_m_axi_input_r_RREADY or grp_neural_network_dense_2_fu_191_m_axi_weights_RREADY)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        gmem_RREADY = grp_neural_network_dense_2_fu_191_m_axi_weights_RREADY;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        gmem_RREADY = grp_neural_network_dense_1_fu_180_m_axi_input_r_RREADY;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        gmem_RREADY = grp_neural_network_softmax_fu_172_m_axi_output_r_RREADY;
    end else begin
        gmem_RREADY = 'bx;
    end
end

/// relu_out_1_address0 assign process. ///
always @ (ap_CS_fsm or tmp_i_reg_333 or grp_neural_network_dense_2_fu_191_input_r_address0)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        relu_out_1_address0 = tmp_i_reg_333;
    end else if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        relu_out_1_address0 = grp_neural_network_dense_2_fu_191_input_r_address0;
    end else begin
        relu_out_1_address0 = 'bx;
    end
end

/// relu_out_1_ce0 assign process. ///
always @ (ap_CS_fsm or grp_neural_network_dense_2_fu_191_input_r_ce0)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        relu_out_1_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        relu_out_1_ce0 = grp_neural_network_dense_2_fu_191_input_r_ce0;
    end else begin
        relu_out_1_ce0 = ap_const_logic_0;
    end
end

/// relu_out_1_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        relu_out_1_we0 = ap_const_logic_1;
    end else begin
        relu_out_1_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or grp_neural_network_dense_1_fu_180_ap_done or exitcond_i_fu_270_p2 or grp_neural_network_softmax_fu_172_ap_done or grp_neural_network_dense_2_fu_191_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_logic_0 == grp_neural_network_dense_1_fu_180_ap_done)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(exitcond_i_fu_270_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st7_fsm_6 : 
        begin
            if (~(ap_const_logic_0 == grp_neural_network_dense_2_fu_191_ap_done)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            if (~(ap_const_logic_0 == grp_neural_network_softmax_fu_172_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign dense_1_out_d0 = grp_neural_network_dense_1_fu_180_output_r_d0;
assign dense_2_out_d0 = grp_neural_network_dense_2_fu_191_output_r_d0;
assign exitcond_i_fu_270_p2 = (i_i_reg_160 == ap_const_lv8_80? 1'b1: 1'b0);
assign gmem_AWADDR = grp_neural_network_softmax_fu_172_m_axi_output_r_AWADDR;
assign gmem_AWBURST = grp_neural_network_softmax_fu_172_m_axi_output_r_AWBURST;
assign gmem_AWCACHE = grp_neural_network_softmax_fu_172_m_axi_output_r_AWCACHE;
assign gmem_AWID = grp_neural_network_softmax_fu_172_m_axi_output_r_AWID;
assign gmem_AWLEN = grp_neural_network_softmax_fu_172_m_axi_output_r_AWLEN;
assign gmem_AWLOCK = grp_neural_network_softmax_fu_172_m_axi_output_r_AWLOCK;
assign gmem_AWPROT = grp_neural_network_softmax_fu_172_m_axi_output_r_AWPROT;
assign gmem_AWQOS = grp_neural_network_softmax_fu_172_m_axi_output_r_AWQOS;
assign gmem_AWREGION = grp_neural_network_softmax_fu_172_m_axi_output_r_AWREGION;
assign gmem_AWSIZE = grp_neural_network_softmax_fu_172_m_axi_output_r_AWSIZE;
assign gmem_AWUSER = grp_neural_network_softmax_fu_172_m_axi_output_r_AWUSER;
assign gmem_AWVALID = grp_neural_network_softmax_fu_172_m_axi_output_r_AWVALID;
assign gmem_BREADY = grp_neural_network_softmax_fu_172_m_axi_output_r_BREADY;
assign gmem_WDATA = grp_neural_network_softmax_fu_172_m_axi_output_r_WDATA;
assign gmem_WID = grp_neural_network_softmax_fu_172_m_axi_output_r_WID;
assign gmem_WLAST = grp_neural_network_softmax_fu_172_m_axi_output_r_WLAST;
assign gmem_WSTRB = grp_neural_network_softmax_fu_172_m_axi_output_r_WSTRB;
assign gmem_WUSER = grp_neural_network_softmax_fu_172_m_axi_output_r_WUSER;
assign gmem_WVALID = grp_neural_network_softmax_fu_172_m_axi_output_r_WVALID;
assign grp_fu_201_ce = ap_const_logic_1;
assign grp_fu_201_opcode = ap_const_lv5_2;
assign grp_fu_201_p0 = dense_1_out_q0;
assign grp_fu_201_p1 = ap_const_lv32_0;
assign grp_neural_network_dense_1_fu_180_ap_start = grp_neural_network_dense_1_fu_180_ap_start_ap_start_reg;
assign grp_neural_network_dense_1_fu_180_dense_1_bias7 = dense_1_bias7_reg_295;
assign grp_neural_network_dense_1_fu_180_dense_1_weights5 = dense_1_weights5_reg_300;
assign grp_neural_network_dense_1_fu_180_input1 = input1_reg_305;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_ARREADY = gmem_ARREADY;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_AWREADY = ap_const_logic_0;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_BID = ap_const_lv1_0;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_BRESP = ap_const_lv2_0;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_BUSER = ap_const_lv1_0;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_BVALID = ap_const_logic_0;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_RDATA = gmem_RDATA;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_RID = gmem_RID;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_RLAST = gmem_RLAST;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_RRESP = gmem_RRESP;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_RUSER = gmem_RUSER;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_RVALID = gmem_RVALID;
assign grp_neural_network_dense_1_fu_180_m_axi_input_r_WREADY = ap_const_logic_0;
assign grp_neural_network_dense_2_fu_191_ap_start = grp_neural_network_dense_2_fu_191_ap_start_ap_start_reg;
assign grp_neural_network_dense_2_fu_191_dense_2_bias11 = dense_2_bias1_reg_310;
assign grp_neural_network_dense_2_fu_191_dense_2_weights9 = dense_2_weights9_reg_315;
assign grp_neural_network_dense_2_fu_191_input_r_q0 = relu_out_1_q0;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_ARREADY = gmem_ARREADY;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_AWREADY = ap_const_logic_0;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_BID = ap_const_lv1_0;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_BRESP = ap_const_lv2_0;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_BUSER = ap_const_lv1_0;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_BVALID = ap_const_logic_0;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_RDATA = gmem_RDATA;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_RID = gmem_RID;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_RLAST = gmem_RLAST;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_RRESP = gmem_RRESP;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_RUSER = gmem_RUSER;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_RVALID = gmem_RVALID;
assign grp_neural_network_dense_2_fu_191_m_axi_weights_WREADY = ap_const_logic_0;
assign grp_neural_network_softmax_fu_172_ap_start = grp_neural_network_softmax_fu_172_ap_start_ap_start_reg;
assign grp_neural_network_softmax_fu_172_input_r_q0 = dense_2_out_q0;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_ARREADY = gmem_ARREADY;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_AWREADY = gmem_AWREADY;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_BID = gmem_BID;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_BRESP = gmem_BRESP;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_BUSER = gmem_BUSER;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_BVALID = gmem_BVALID;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_RDATA = gmem_RDATA;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_RID = gmem_RID;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_RLAST = gmem_RLAST;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_RRESP = gmem_RRESP;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_RUSER = gmem_RUSER;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_RVALID = gmem_RVALID;
assign grp_neural_network_softmax_fu_172_m_axi_output_r_WREADY = gmem_WREADY;
assign grp_neural_network_softmax_fu_172_output3 = output3_reg_320;
assign i_fu_276_p2 = (i_i_reg_160 + ap_const_lv8_1);
assign neural_network_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

/// neural_network_ap_rst assign process. ///
always @ (ap_rst_n)
begin
    neural_network_ap_rst = ~ap_rst_n;
end
assign neural_network_control_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign neural_network_gmem_m_axi_U_ap_dummy_ce = ap_const_logic_1;
assign relu_out_1_d0 = ((grp_fu_201_p2)? dense_1_out_load_reg_343: ap_const_lv32_0);
assign tmp_i_fu_282_p1 = $unsigned(i_i_reg_160);
always @ (posedge ap_clk)
begin
    tmp_i_reg_333[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end



endmodule //neural_network

